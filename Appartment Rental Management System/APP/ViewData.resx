<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>